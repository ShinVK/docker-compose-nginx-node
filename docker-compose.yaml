version: '3'

services:
# nome que vai ser dado pro servico dentro do docker compose
  app-desafio:
    build:
      context: node
    container_name: node_app
    entrypoint: dockerize -wait tcp://db:3306 -timeout 40s sh -c "npm install && node index.js"
    restart: always
    networks:
      - node-desafio
    volumes:
      - ./node:/usr/src/app
    tty: true
    ports:
      - '3000:3000'
    depends_on:
      - db

  db:
    image: mysql:5.7
    volumes:
      - ./mysql:/var/lib/mysql
    command: --innodb-use-native-aio=0
    # nome que vai aparecer no docker ps
    container_name: mysql
    restart: always
    tty: true
    networks:
      - node-desafio
    environment:
      MYSQL_DATABASE: nodedb
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin

  nginx:
    build:
      context: nginx
    container_name: nginx-node
    networks:
      - node-desafio
    ports:
      - '8080:80'
    depends_on:
      - app-desafio

networks:
  node-desafio:
    driver: bridge
# quando mudar os arquivos do dockerfile
# docker-compose up -d --build
